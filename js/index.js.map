{"version":3,"sources":["src/_helpers.js","src/main.js"],"names":["debounce","fn","time","timeout","_this","this","_arguments","arguments","functionCall","apply","clearTimeout","setTimeout","mq","small","window","matchMedia","medium","large","childIndex","el","Array","from","parentNode","children","indexOf","getUrlParameter","name","replace","regex","results","RegExp","exec","location","search","decodeURIComponent","siteTitle","document","querySelector","cards","querySelectorAll","cardWrapper","getElementById","closeButton","cardDelay","projectCards","getProjectByUrl","filter","item","project","getProjectByElement","element","cardHeight","cardScale","gutter","calculateScale","matches","clientWidth","setWrapperHeight","wrapperHeight","length","style","height","concat","positionCard","card","index","header","hh","y","clientHeight","transform","nextBtnHandler","console","log","renderNextLink","nextCard","undefined","nextProject","btnContainer","createElement","classList","add","body","appendChild","nextLink","innerHTML","href","link","addEventListener","e","preventDefault","closeCurrentCard","openCard","fetchProjectInfo","fetch","then","response","text","content","catch","err","push","stateObj","history","pushState","pageYOffset","top","bodyScrollLock","disableBodyScroll","remove","contains","closeCard","scrollTop","enableBodyScroll","currentCard","defaultHistoryState","title","replaceState","ProjectCard","getAttribute","setUpCards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","value","newCard","return","resetCards","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","popStateHandler","event","state","pageLoad","homeBtnHandler"],"mappings":"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","sourcesContent":["\nconst debounce = (fn, time) => {\n  let timeout;\n\n  return function() {\n    const functionCall = () => fn.apply(this, arguments);\n\n    clearTimeout(timeout);\n    timeout = setTimeout(functionCall, time);\n  };\n};\n\nconst mq = {\n  small:  window.matchMedia(\"(min-width: 400px)\"),\n  medium: window.matchMedia(\"(min-width: 700px)\"),\n  large:  window.matchMedia(\"(min-width: 1000px)\")\n};\n\nconst childIndex = (el) => Array.from(el.parentNode.children).indexOf(el);\n\nfunction getUrlParameter(name) {\n  name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n  const results = regex.exec(location.search);\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n","\nconst siteTitle = document.querySelector('.site-title');\nconst cards = document.querySelectorAll('.card');\nconst cardWrapper = document.getElementById('card-wrapper');\nconst closeButton = document.getElementById('close-project');\nconst cardDelay = 250;\nconst projectCards = [];\n\nconst getProjectByUrl = () => {\n  return projectCards.filter(item => item.project === getUrlParameter('content'))[0];\n};\n\nconst getProjectByElement = (element) => {\n  return projectCards.filter(item => item.el === element)[0];\n};\n\nlet cardHeight, cardScale, gutter;\n\nfunction calculateScale() {\n  cardHeight = mq.medium.matches ? 480\n             : mq.small.matches ? 360\n             : 300;\n\n  cardScale = mq.small.matches ? 0.95 : 0.925;\n  gutter = cardWrapper.clientWidth * (1 - cardScale)/2;\n}\n\nfunction setWrapperHeight() {\n  const wrapperHeight = cards.length * (cardHeight + gutter);\n  cardWrapper.style.height = `${wrapperHeight}px`;\n}\n\nfunction positionCard(card) {\n  // console.log('Positioning card');\n  const index = childIndex(card);\n  const header = document.getElementById('header');\n  const hh = header ? header.clientHeight : 0;\n  const y = hh + index * cardHeight;\n  card.style.transform = `scaleX(${cardScale}) translateY(${y + gutter * index}px)`;\n}\n\nfunction nextBtnHandler() {\n  console.log('something');\n}\n\nfunction renderNextLink(project) {\n  const nextCard = cards[childIndex(project.el) + 1];\n  if (nextCard !== undefined) {\n    const nextProject = getProjectByElement(nextCard);\n\n    const btnContainer = document.createElement('div');\n    btnContainer.classList.add('btn-container');\n    project.body.appendChild(btnContainer);\n\n    const nextLink = document.createElement('a');\n    nextLink.classList.add('btn-next-project');\n    nextLink.innerHTML = 'Next Project';\n    nextLink.href = nextProject.link;\n\n    nextLink.addEventListener('click', (e) => {\n      e.preventDefault();\n      closeCurrentCard();\n      openCard(nextProject, true);\n    });\n\n    btnContainer.appendChild(nextLink);\n  }\n}\n\nfunction fetchProjectInfo(card) {\n  // console.log('Fetching project info');\n  fetch(`./pages/${card.project}.html`).then((response) => {\n    return response.text();\n  }).then((content) => {\n    card.body.innerHTML += content;\n    renderNextLink(card);\n    setTimeout(() => {\n      card.el.classList.add('content-loaded');\n    }, 125);\n  }).catch((err) => {\n    console.log('Fetch Error', err);\n  });\n}\n\nfunction openCard(card, push) {\n  // console.log('Opening card');\n  if (push) {\n    const stateObj = { content: card.project };\n    history.pushState(stateObj, 'project page', card.link);\n  }\n  // console.log(card.offsetTop);\n  card.el.classList.add('expanded', 'anim-in');\n  card.el.style.transform = `scaleX(1) translateY(${window.pageYOffset}px)`;\n  card.el.style.top = `-${window.pageYOffset}px`;\n  bodyScrollLock.disableBodyScroll(card.el);\n  setTimeout(() => {\n    card.el.classList.remove('anim-in');\n    if (closeButton) {\n      closeButton.classList.add('visible');\n    }\n  }, cardDelay);\n  if (!card.el.classList.contains('content-loaded')) {\n    fetchProjectInfo(card);\n  }\n}\n\nfunction closeCard(card) {\n  if (closeButton) {\n    closeButton.classList.remove('visible');\n  }\n  card.scrollTop = 0;\n  card.classList.add('anim-out');\n  bodyScrollLock.enableBodyScroll(card);\n  positionCard(card);\n  setTimeout(() => {\n    card.classList.remove('expanded', 'anim-out');\n    card.style.top = `0`;\n  }, cardDelay);\n}\n\nfunction closeCurrentCard() {\n  const currentCard = document.querySelector('.card.expanded');\n  closeCard(currentCard);\n}\n\nfunction defaultHistoryState(push) {\n  const stateObj = { content: 'project index' };\n  if (push) {\n    history.pushState(stateObj, document.title, 'index.html');\n  } else {\n    history.replaceState(stateObj, document.title, 'index.html');\n  }\n}\n\nfunction ProjectCard(card) {\n  this.el = card;\n  this.header = card.querySelector('.card-header');\n  this.body = card.querySelector('.card-body--inner');\n  this.project = card.getAttribute('id');\n  this.link = this.header.getAttribute('href');\n\n  this.header.addEventListener('click', (e) => {\n    e.preventDefault();\n    if (!this.el.classList.contains('expanded')) {\n      openCard(this, true);\n    }\n  });\n\n}\n\nfunction setUpCards() {\n  // console.log('Setting up cards');\n  calculateScale();\n  setWrapperHeight();\n  if (!getUrlParameter('content')) {\n    defaultHistoryState();\n  }\n  for (let card of cards) {\n    let newCard = new ProjectCard(card);\n    projectCards.push(newCard);\n    positionCard(card);\n  }\n}\n\nfunction resetCards() {\n  calculateScale();\n  setWrapperHeight();\n  for (let card of cards) {\n    if (!card.classList.contains('expanded')) {\n      positionCard(card);\n    }\n  }\n}\n\nconst popStateHandler = (event) => {\n  // console.log('Popstate fired!');\n  if (event.state.content === 'project index') {\n    closeCurrentCard();\n  } else if (getUrlParameter('content')) {\n    closeCurrentCard();\n    const project = getProjectByUrl();\n    openCard(project, false);\n  }\n};\n\nfunction pageLoad() {\n  if (window.location.search) {\n    const project = getProjectByUrl();\n    openCard(project, false);\n  }\n}\n\nfunction homeBtnHandler(e) {\n  e.preventDefault();\n  if (getUrlParameter('content') !== '') {\n    closeCurrentCard();\n    defaultHistoryState(true);\n  } else {\n    window.location = 'index.html';\n  }\n}\n\n\nsiteTitle.addEventListener('click', homeBtnHandler);\nwindow.addEventListener('popstate', popStateHandler);\nwindow.addEventListener('load', pageLoad);\n\nwindow.addEventListener('resize', debounce(() => {\n  resetCards();\n}, 100));\n\nsetUpCards();\nsetTimeout(() => {\n  cardWrapper.classList.add('visible');\n  cardWrapper.classList.remove('no-trans');\n}, cardDelay);\n"]}